<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx 
  		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
  		http://www.springframework.org/schema/aop 
  		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
  		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- Component Bean Scanning Controller Exclude -->
	<context:component-scan base-package="com.bg.jtown"/>

	<!-- DBSetting -->
	<bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/com/bg/jtown/properties/DBSetting.properties</value>
                <value>classpath:/com/bg/jtown/properties/RedisSetting.properties</value>
            </list>
        </property>
    </bean>

    <!-- Redis -->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.serverIp}" />  
		<property name="port" value="${redis.serverPort}" />  
		<property name="password" value="${redis.password}" /> 
	</bean> 

	<bean id="publishTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>
	
	<bean id="jdbcUserDetailsManager" class="com.bg.jtown.security.CustomJdbcUserDetailManager">
		<property name="dataSource" ref="dataSource" />		
		<property name="enableGroups" value="true"/>
		<property name="enableAuthorities" value="false"/>		
	</bean>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider user-service-ref="jdbcUserDetailsManager">
			<sec:password-encoder ref="passwordEncoder">
				<sec:salt-source ref="saltSource" />
			</sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager>
    
    <bean id="httpServletRequest" class="org.springframework.mock.web.MockHttpServletRequest" />
    
</beans>
