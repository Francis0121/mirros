<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">	
	
	<resultMap type="JtownUser" id="jt-user-map">
		<result property="pn" column="pn" />
		<result property="username" column="id" />
		<result property="enabled" column="enable" />
		<result property="salt" column="salt" />
		<result property="name" column="name" />
	</resultMap>
	
	<resultMap type="JtownUser" id="jt-user-seller-map" extends="jt-user-map">
		<result property="shopPn" column="shop_pn"/>
	</resultMap>		
	
	<resultMap type="Interest" id="jt-auto-interest-section-map">
		<result property="sectionPn" column="pn"/>
		<result property="name" column="name"/>
	</resultMap>
	
	<resultMap type="Interest" id="jt-interest-category-map">
		<result property="categoryPn" column="category_pn" />
		<result property="name" column="name"/>
	</resultMap>
	
	<resultMap type="Interest" id="jt-interest-section-list-map" extends="jt-interest-category-map">
		<result property="customerPn" column="customer_pn" />
		<result property="sellerPn" column="seller_pn" />
		<result property="interestSectionList" column="interest_section_list" />
	</resultMap>
	
	<resultMap type="Comment" id="jt-admin-comment-map">
		<result property="commentPn" column="pn" />
		<result property="customerPn" column="customer_pn" />
		<result property="customerName" column="id" />
		<result property="sellerPn" column="seller_pn" />
		<result property="comment" column="comment" />
		<result property="inputDate" column="input_date" />
	</resultMap>
	
	<!-- Common -->
	
	<select id="selectInterestCategoryList" resultMap="jt-interest-category-map">
		SELECT pn AS category_pn, name FROM interest_category
	</select>
	
	<select id="selectInterestSectionFromName" parameterType="String" resultType="Integer">
		SELECT pn FROM interest_section WHERE name = #{name} AND category_pn = 1
	</select>
	
	<insert id="insertInterestSection" parameterType="Interest">
		INSERT INTO interest_section
			( category_pn, name, upper_name)
		VALUES
			( 1, #{name}, #{upperName} )
		<selectKey keyProperty="sectionPn" resultType="Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>			
	</insert>
	
	<insert id="insertSellerInterest" parameterType="Interest">
		INSERT INTO user_seller_interest
			( seller_pn, section_pn )
		VALUES
			( #{sellerPn}, #{sectionPn} )
	</insert>
	
	<delete id="deleteSellerInterest" parameterType="Interest">
		DELETE FROM
			user_seller_interest
		WHERE
			seller_pn = #{sellerPn}
	</delete>
	
	<select id="selectInterestSection" parameterType="Interest" resultMap="jt-auto-interest-section-map">
		SELECT
			pn, name
		FROM
			interest_section
		WHERE
			category_pn = 1
		AND
			upper_name LIKE #{upperName}
	</select>
	
	<update id="updateEnabled" parameterType="JtownUser">
		UPDATE
			users
		SET
			enable = #{enabled}
		WHERE
			pn = #{pn}	
	</update>
	
	<!-- Admin -->
	
	<select id="selectAdministratorList" parameterType="AdministratorFilter" resultMap="jt-user-map">
		SELECT
			u.pn, u.id, u.name, u.salt, u.enable
		FROM
			users u,
			group_members gm
		WHERE
			u.pn = gm.user_pn
		AND
			gm.group_id = 3
		ORDER BY
			salt DESC		
		LIMIT #{pagination.itemSeqBegin}, #{pagination.numItemsPerPage}
	</select>
	
	<select id="selectAdminCount" parameterType="AdministratorFilter" resultType="Integer"> 
		SELECT
			COUNT(*)
		FROM
			users u,
			group_members gm
		WHERE
			u.pn = gm.user_pn
		AND
			gm.group_id = 3
	</select>
	
	<!-- Seller -->
	
	<select id="selectSeller" parameterType="Integer" resultMap="jt-user-seller-map">
		SELECT
			u.pn, u.id, u.enable, u.name, u.salt, us.shop_pn
		FROM
			user_seller us,
			users u
		WHERE
			us.pn = u.pn
		AND
			u.name = #{name}
	</select>
	
	<select id="selectSellerInterestList" parameterType="ArrayList" resultMap="jt-interest-section-list-map">
		SELECT 
			seller_pn, category_pn, interest_section_list
		FROM (
			SELECT
				*, GROUP_CONCAT(isn.name) AS interest_section_list
			FROM
				interest_section isn,
				user_seller_interest usi
			WHERE
				isn.pn = usi.section_pn
			GROUP BY usi.seller_pn
		) interest
		WHERE 
			seller_pn IN
		<foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
			#{item}
		</foreach>				
	</select>
    
    <select id="selectSellerLovers" parameterType="Integer" resultType="Count">
        SELECT
            uc.pn AS customerPn,
            input_date AS inputDate,
            name AS message
        FROM
            user_customer uc
			JOIN users u
            ON uc.pn = u.pn AND u.id LIKE '%.c'
            LEFT OUTER JOIN count_love cl
            ON uc.pn = cl.customer_pn AND seller_pn = #{sellerPn}
    </select>
	
	<update id="updateSeller" parameterType="JtownUser">
		<choose>
			<when test="name != null and name != ''">
				UPDATE
					users
				SET
					name = #{name},
					upper_name = #{upperName}
				WHERE
					pn = #{pn}
			</when>
			<otherwise>
				UPDATE
					user_seller
				SET
					shop_url = #{shopUrl}
				WHERE
					pn = #{pn}
			</otherwise>
		</choose>
	</update>
	
	<!-- Customer -->
	
	<select id="selectCustomerInterestList" parameterType="ArrayList" resultMap="jt-interest-section-list-map">
		SELECT 
			customer_pn, category_pn, interest_name_list
		FROM (
				SELECT
					*, GROUP_CONCAT(isn.name) AS interest_name_list
				FROM
					interest_section isn,
					user_customer_interest uci
				WHERE
					isn.pn = uci.section_pn
				GROUP BY uci.customer_pn
			) interest
		WHERE 
			customer_pn IN
		<foreach collection="list" item="item" index="index"  open="(" separator="," close=")">
			#{item}
		</foreach>		
	</select>
	
	<select id="selectAllCommentCount" parameterType="AdminCommentFilter" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			user_customer_comment	
	</select>
	
	<select id="selectAllCommentList" parameterType="AdminCommentFilter" resultMap="jt-admin-comment-map">
		SELECT
			ucc.pn, ucc.customer_pn, u.id, ucc.seller_pn, ucc.comment, input_date
		FROM
			user_customer_comment ucc,
			user_customer uc
			LEFT OUTER JOIN users u
			ON uc.pn = u.pn
		WHERE
			ucc.customer_pn = uc.pn	
		ORDER BY
			input_date DESC
		LIMIT #{pagination.itemSeqBegin}, #{pagination.numItemsPerPage}
	</select>
	
	<select id="selectCustomerList" parameterType="UserFilter" resultMap="jt-user-map">
		SELECT
			u.pn, u.id, u.name, u.enable, u.salt
		FROM
			user_customer uc,
			users u 
		WHERE
			uc.pn = u.pn
		<if test="enabled != null">
		AND	u.enable = #{enabled}
		</if>
		<if test="name != null and name != ''">
		AND	u.name = #{name}
		</if>
		<if test="userId != null and userId != ''">
		AND	u.id = #{userId}
		</if>	
		ORDER BY
			u.salt DESC	
		LIMIT #{pagination.itemSeqBegin}, #{pagination.numItemsPerPage}	 	
	</select>
	
	<select id="selectCustomerCount" parameterType="UserFilter" resultType="Integer">
		SELECT
			COUNT(u.pn)
		FROM
			user_customer uc,
			users u 
		WHERE
			uc.pn = u.pn
		<if test="enabled != null">
		AND	u.enable = #{enabled}
		</if>
		<if test="name != null and name != ''">
		AND	u.name = #{name}
		</if>
		<if test="userId != null and userId != ''">
		AND	u.id = #{userId}
		</if>	
	</select>
	
	<insert id="insertEventBanner">
	    INSERT INTO 
	    	banner_event(image, event_name, contents, input_date, banner_type, banner_order, datas, deleted, fb_message, fb_thumbnail)
		VALUES
			(#{image}, #{eventName}, #{content}, SYSDATE(), #{bannerType}, 1, #{variableData}, 'N', #{fbMessage}, #{fbThumbnail})
	</insert>	
	
	<update id="deleteEventBanner">
		UPDATE 
			banner_event
		SET 
			deleted = 'Y'
		WHERE 
			event_pn = #{pn}
	</update>
	
	<update id="updateEventBanner">
	    UPDATE
	    	banner_event
	    SET
	    	image = #{image}, 
	    	event_name = #{eventName}, 
	    	contents = #{content},
	    	banner_type = #{bannerType},
	    	datas  = #{variableData},
	    	fb_message =  #{fbMessage},
	    	fb_thumbnail =  #{fbThumbnail}
	    WHERE
	    	event_pn = #{pn}
	</update>
	
	<!-- ProductCategory -->
	
	<resultMap type="ProductCategory" id="jt-product-category-map">
		<result column="sections_pn" property="sectionsPn"/>
		<result column="sections_name" property="sectionsName"/>
		<result column="divisions_pn" property="divisionsPn"/>
		<result column="divisions_name" property="divisionsName"/>
		<result column="groups_pn" property="groupsPn"/>
		<result column="groups_name" property="groupsName"/>
	</resultMap>

	<select id="selectSectionsList" resultMap="jt-product-category-map">
	    SELECT 
	    	sections_pn,
	    	sections_name
	    FROM
	    	product_sections
	    WHERE
	    	deleted = 'N'
	</select>
	
	<select id="selectDivisionsList" resultMap="jt-product-category-map">
	    SELECT
	    	divisions_pn, 
	    	sections_pn,
	    	divisions_name
	    FROM
	    	product_divisions
	    WHERE
	    	deleted = 'N'
	    AND
	    	sections_pn = #{sectionsPn}
	</select>
	
	<select id="selectGroupsList" resultMap="jt-product-category-map">
	    SELECT
	    	groups_pn,
	    	divisions_pn, 
	    	groups_name
	    FROM
	    	product_groups
	    WHERE
	    	deleted = 'N'
	    AND
	    	divisions_pn = #{divisionsPn}
	</select>
	
	<insert id="insertSectionsItem">
	    INSERT INTO
	    	product_sections(sections_name)
	    VALUES(#{sectionsName})
	     <selectKey keyProperty="sectionsPn" resultType="Integer" order="AFTER">
    		SELECT LAST_INSERT_ID()
  		</selectKey>
	</insert>
	
	<insert id="insertDivisionsItem">
	    INSERT INTO
	    	product_divisions(sections_pn, divisions_name)
	    VALUES(#{sectionsPn}, #{divisionsName})
	     <selectKey keyProperty="divisionsPn" resultType="Integer" order="AFTER">
    		SELECT LAST_INSERT_ID()
  		</selectKey>
	</insert>
	
	<insert id="insertGroupsItem">
	    INSERT INTO
	    	product_groups(divisions_pn, groups_name)
	    VALUES(#{divisionsPn}, #{groupsName})
	     <selectKey keyProperty="groupsPn" resultType="Integer" order="AFTER">
    		SELECT LAST_INSERT_ID()
  		</selectKey>
	</insert>
	
	<update id="updateSectionsItem">
	    UPDATE
	    	product_sections 
	    SET
	    	sections_name = #{sectionsName}
	    WHERE
	    	sections_pn = #{sectionsPn}
	</update>
	
	<update id="updateDivisionsItem">
	    UPDATE
	    	product_divisions
	    SET
	    	divisions_name = #{divisionsName}
	    WHERE
	    	divisions_pn = #{divisionsPn}
	</update>
	
	<update id="updateGroupsItem">
		UPDATE
			product_groups
		SET
			groups_name = #{groupsName}
		WHERE	    
			groups_pn = #{groupsPn}
	</update>
	
	<insert id="insertProductCategory">
		INSERT INTO
			product_category(pn, sections_pn, divisions_pn, groups_pn)
		VALUES(#{pn}, #{sectionsPn}, #{divisionsPn}, #{groupsPn} ) 
	</insert>
	
	<update id="updateProductCategory">
	    UPDATE
	    	product_category
	    SET
	    	sections_pn = #{sectionsPn}, 
	    	divisions_pn = #{divisionsPn}, 
	    	groups_pn = #{groupsPn}
	    WHERE
	    	pn = #{pn}
	</update>
	
	<select id="selectProductCategory" resultMap="jt-product-category-map">
	    SELECT 
	    	sections_pn,
	    	divisions_pn,
	    	groups_pn
	    FROM
	    	product_category
	    WHERE
	    	pn = #{pn}
	</select>
	
</mapper>