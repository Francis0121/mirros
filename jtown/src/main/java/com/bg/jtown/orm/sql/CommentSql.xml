<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="commentMapper">

	<sql id="paginationBefore">
		SELECT 
			t.*
		FROM 
		( 
			SELECT  
				z.*, @RNUM := @RNUM + 1 AS rnum
			FROM
				(
	</sql>
	
	<sql id="paginationAfter">
		<![CDATA[
				) z,  
				( SELECT @RNUM := 0 ) R
			WHERE @RNUM + 1 <=  #{pagination.itemSeqEnd}
		) t
		WHERE t.rnum >= #{pagination.itemSeqBegin}
		]]>
	</sql>

	<!-- Comment -->

	<resultMap type="com.bg.jtown.business.Comment" id="jtown-comment-map">
		<result column="pn" property="commentPn"/>
		<result column="customer_pn" property="customerPn"/>
		<result column="name" property="customerName"/>
		<result column="seller_pn" property="sellerPn"/>
		<result column="comment" property="comment"/>
		<result column="input_date" property="inputDate"/>
		<result column="comment_love_count" property="commentLoveCount"/>
	</resultMap>
	
	<select id="selectCommentCount" parameterType="com.bg.jtown.business.search.CommentFilter" resultType="java.lang.Integer">
		SELECT
			comment_count
		FROM	
			count_comment_seller_pn
		WHERE
			seller_pn = #{sellerPn}
	</select>
	
	<select id="selectCommentTop" parameterType="com.bg.jtown.business.search.CommentFilter" resultMap="jtown-comment-map">	
		SELECT
			p.pn, p.customer_pn, p.name, p.seller_pn, p.comment, p.comment_love_count, 
			DATE_FORMAT(p.input_date, '%Y년도 %c월 %d일 %k시%i분') AS input_date
		FROM
		(
		<![CDATA[
		SELECT
			ucc.pn, ucc.customer_pn, u.name, ucc.seller_pn, ucc.comment,
			CASE 
				WHEN TO_DAYS(SYSDATE()) - TO_DAYS(ucc.input_date) < #{peroid} THEN 1
				ELSE 0
			END AS diff,
			cclcp.comment_love_count, ucc.input_date
		FROM
			user_customer_comment ucc
			LEFT OUTER JOIN count_comment_love_comment_pn cclcp
			ON ucc.pn = cclcp.comment_pn,
			user_customer uc
			LEFT OUTER JOIN users u
			ON uc.pn = u.pn
		WHERE
			ucc.customer_pn = uc.pn
		AND
			ucc.seller_pn = #{sellerPn}
		AND
			comment_love_count > 0
		ORDER BY
			diff DESC, cclcp.comment_love_count DESC, ucc.input_date DESC 
		) p
		]]> 
		WHERE
			diff = 1
		LIMIT #{topItemNum}
	</select>
	
	<select id="selectComment" parameterType="com.bg.jtown.business.search.CommentFilter" resultMap="jtown-comment-map">
		<include refid="paginationBefore"/>
		SELECT
			ucc.pn, ucc.customer_pn, u.name, ucc.seller_pn, ucc.comment, cclcp.comment_love_count, 
			DATE_FORMAT(ucc.input_date, '%Y년도 %c월 %d일 %k시%i분') AS input_date
		FROM
			user_customer_comment ucc
			LEFT OUTER JOIN count_comment_love_comment_pn cclcp
			ON ucc.pn = cclcp.comment_pn,
			user_customer uc
			LEFT OUTER JOIN users u
			ON uc.pn = u.pn
		WHERE
			ucc.customer_pn = uc.pn
		AND
			ucc.seller_pn = #{sellerPn}
		ORDER BY
			input_date DESC 
		<include refid="paginationAfter"/>
	</select>
	
	<select id="selectCommentOne" parameterType="java.lang.Integer" resultMap="jtown-comment-map">
		SELECT
			ucc.pn, ucc.customer_pn, u.name, ucc.seller_pn, ucc.comment, cclcp.comment_love_count, 
			DATE_FORMAT(ucc.input_date, '%Y년도 %c월 %d일 %k시%i분') AS input_date
		FROM
			user_customer_comment ucc
			LEFT OUTER JOIN count_comment_love_comment_pn cclcp
			ON ucc.pn = cclcp.comment_pn,
			user_customer uc
			LEFT OUTER JOIN users u
			ON uc.pn = u.pn
		WHERE
			ucc.customer_pn = uc.pn
		AND
			ucc.pn = #{commentPn}
	</select>
	
	<insert id="insertComment" parameterType="com.bg.jtown.business.Comment">
		INSERT INTO
			user_customer_comment
			( customer_pn, seller_pn, COMMENT, input_date)
		VALUES
			( #{customerPn}, #{sellerPn}, #{comment}, SYSDATE())
		<selectKey resultType="java.lang.Integer" keyProperty="commentPn">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="updateComment" parameterType="com.bg.jtown.business.Comment">
		UPDATE
			user_customer_comment
		SET
			comment = #{comment}
		WHERE
			customer_pn = #{customerPn}
		AND
			pn = #{commentPn}
	</update>

	<delete id="deleteComment" parameterType="com.bg.jtown.business.Comment">
		DELETE FROM
			user_customer_comment
		WHERE
			pn = #{commentPn}
	</delete>
	
	<!-- Comment Love -->
	<select id="selectCommentLove" parameterType="com.bg.jtown.business.Comment" resultType="com.bg.jtown.business.Comment">
		SELECT
			comment_pn AS commentPn, customer_pn AS customerPn, input_date AS inputDate
		FROM
			user_customer_comment_love
		<if test="commentPn != null">
			WHERE
				comment_pn = #{commentPn}
			<if test="customerPn != null">	
				AND
					customer_pn = #{customerPn}		
			</if>
		</if>
	</select>
	
	<select id="selectCommentLoveCount" parameterType="com.bg.jtown.business.Comment" resultType="java.lang.Integer">
		SELECT
			COUNT(comment_pn)
		FROM
			user_customer_comment_love
		<if test="commentPn != null">
			WHERE
				comment_pn = #{commentPn}
			<if test="customerPn != null">	
				AND
					customer_pn = #{customerPn}		
			</if>
		</if>
	</select>
	
	<insert id="insertCommentLove" parameterType="com.bg.jtown.business.Comment">
		INSERT INTO
			user_customer_comment_love
			( comment_pn, customer_pn, input_date )
		VALUES
			( #{commentPn}, #{customerPn}, SYSDATE() )
	</insert>
	
	<delete id="deleteCommentLove" parameterType="com.bg.jtown.business.Comment">
		DELETE FROM
			user_customer_comment_love
		WHERE
			comment_pn = #{commentPn}
		<if test="customerPn != null">
		AND
			customer_pn = #{customerPn}
		</if>
	</delete>
	
</mapper>