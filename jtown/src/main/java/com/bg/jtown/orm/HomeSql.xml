<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="homeMapper">

	<resultMap type="JtownUser" id="jtown-seller-map">
		<result column="pn" property="pn"/>
		<result column="name" property="name"/>
		<result column="shop_url" property="shopUrl"/>
		<result column="notice" property="notice"/>
		<result column="love_count" property="loveCount"/>
		<result column="view_count" property="viewCount"/>
		<result column="comment_count" property="commentCount"/>
		<result column="banner_first" property="bannerFirst"/>
		<result column="banner_second" property="bannerSecond"/>
		<result column="customer_pn" property="customerPn"/>
		<result column="love_hot_count" property="loveHotCount"/>
		<result column="new_product" property="newProduct"/>
		<result column="event_pn" property="eventPn"/>
		<result column="event_name" property="eventName"/>
		<result column="end_date" property="endDate"/>
		<result column="banner_order" property="bannerOrder"/>
		<collection property="images" column="pn" javaType="ArrayList" select="selectSellerImage" ofType="File"/>
	</resultMap>
	
	<select id="selectSellerImage" parameterType="Integer" resultType="File">
		SELECT
			usin.category AS category, usin.save_name AS saveName, usin.content_type AS type
		FROM
			user_seller_image_name usin
		WHERE
			usin.seller_pn = #{properNumber}
	</select>

	<select id="selectFromInterestCategoryCount" parameterType="HomeFilter" resultType="Integer">
		SELECT
			COUNT(*)
		FROM	(
				SELECT
					us.pn
				FROM
					user_seller us
					LEFT OUTER JOIN users u
						ON us.pn = u.pn
					JOIN user_seller_product usp
						ON usp.seller_pn = us.pn
					JOIN partnership p
						ON p.seller_pn = usp.seller_pn
					JOIN user_seller_contract_info usci
						ON usci.seller_pn = usp.seller_pn
					<if test="itemName != null ">
						LEFT OUTER JOIN product_category pc 
							ON pc.pn = usp.pn
						LEFT OUTER JOIN (SELECT * FROM product_sections WHERE deleted='N') ps
							ON ps.sections_pn = pc.sections_pn
						LEFT OUTER JOIN (SELECT * FROM product_divisions WHERE deleted='N')pd
							ON pc.divisions_pn = pd.divisions_pn
						LEFT OUTER JOIN (SELECT * FROM product_groups WHERE deleted ='N') pg 
							ON pc.groups_pn = pg.groups_pn	
					</if>
				WHERE
					u.enable = 1
				AND
					p.seller_pn = us.pn
				AND
					us.pn = usci.seller_pn
				AND
					CURDATE() BETWEEN usci.start_date AND usci.end_date	
				<if test="categoryPn != null and categoryPn != 0 ">	
				AND
					p.category_pn = #{categoryPn}
				</if>	
				<if test="itemName != null ">
				    AND usp.DELETED ='N'
				    AND (UCASE(usp.name) LIKE CONCAT('%',UCASE(#{itemName}),'%') 
						    	OR sections_name LIKE CONCAT('%',#{itemName},'%')
								OR divisions_name LIKE CONCAT('%',#{itemName},'%')
								OR groups_name LIKE CONCAT('%',#{itemName},'%')
								OR shop_name LIKE CONCAT('%',#{itemName},'%')
							)
				</if>
				GROUP BY 
					us.pn
			) t
	</select>

	<select id="selectFromInterestCategory" parameterType="HomeFilter" resultMap="jtown-seller-map">
		SELECT
			us.pn , u.name, us.shop_url, us.notice, 
			ssid.view_count, clsp.love_count, ccsp.comment_count, bdl.banner_first, bdl.banner_second, 
			pnb.new_product, usle.event_pn, usle.event_name, DATEDIFF(usle.end_date,NOW()) AS end_date, usle.banner_order,
			us.hot AS love_hot_count
			<if test="customerPn != null">
			, cl.customer_pn
			</if>
		FROM
			user_seller us 
			LEFT OUTER JOIN users u
				ON us.pn = u.pn
			LEFT OUTER JOIN count_love_seller_pn clsp
				ON us.pn = clsp.seller_pn
			LEFT OUTER JOIN sum_statistic_interval_7day ssid
				ON us.pn = ssid.seller_pn
			LEFT OUTER JOIN count_comment_seller_pn ccsp
				ON us.pn = ccsp.seller_pn
			LEFT OUTER JOIN banner_diff_least bdl
				ON us.pn = bdl.seller_pn
			LEFT OUTER JOIN product_new_bool pnb
				ON us.pn = pnb.seller_pn
			LEFT OUTER JOIN (SELECT * FROM user_seller_event WHERE DATEDIFF(end_date,NOW()) >= 0 ORDER BY RAND()) usle
				ON usle.seller_pn = us.pn
			JOIN partnership p
				ON p.seller_pn = u.pn
			JOIN user_seller_contract_info usci
				ON usci.seller_pn = u.pn	
			<if test="itemName != null ">
				JOIN user_seller_product usp
				ON usp.seller_pn = us.pn			
				LEFT OUTER JOIN product_category pc 
						ON pc.pn = usp.pn
					LEFT OUTER JOIN (SELECT * FROM product_sections WHERE deleted='N') ps
						ON ps.sections_pn = pc.sections_pn
					LEFT OUTER JOIN (SELECT * FROM product_divisions WHERE deleted='N')pd
						ON pc.divisions_pn = pd.divisions_pn
					LEFT OUTER JOIN (SELECT * FROM product_groups WHERE deleted ='N') pg 
						ON pc.groups_pn = pg.groups_pn	
			</if>
			<if test="customerPn != null">
			LEFT OUTER JOIN count_love cl
			ON us.pn = cl.seller_pn AND cl.customer_pn = #{customerPn}
			</if>
			
		WHERE
			u.enable = 1
		AND
			p.seller_pn = us.pn
		AND
			us.pn = usci.seller_pn
		AND 
			CURDATE() BETWEEN usci.start_date AND usci.end_date 
		<if test="categoryPn != null and categoryPn != 0">
		AND
			p.category_pn = #{categoryPn}
		</if>
		<if test="itemName != null ">
		    AND usp.DELETED ='N'
		    AND (UCASE(usp.name) LIKE CONCAT('%',UCASE(#{itemName}),'%') 
				    	OR sections_name LIKE CONCAT('%',#{itemName},'%')
						OR divisions_name LIKE CONCAT('%',#{itemName},'%')
						OR groups_name LIKE CONCAT('%',#{itemName},'%')
						OR shop_name LIKE CONCAT('%',#{itemName},'%')
					)
		</if>
		GROUP BY 
			us.pn
		LIMIT #{pagination.itemSeqBegin}, #{pagination.numItemsPerPage}
	</select>
	
	<select id="selectFromInterestCount" parameterType="HomeFilter" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			user_seller us
			LEFT OUTER JOIN users u
			ON us.pn = u.pn,
			user_seller_interest usi,
			user_seller_contract_info usci,
			interest_section ise
		WHERE
			u.enable = 1
		AND
			us.pn = usi.seller_pn
		AND
			us.pn = usci.seller_pn
		AND
			DATE_FORMAT(SYSDATE(), '%Y-%m-%d') BETWEEN usci.start_date AND usci.end_date	
		AND
			usi.section_pn = ise.pn
		AND
			ise.pn = #{sectionPn}
		ORDER BY
			us.pn
	</select>
	
	<select id="selectFromInterest" parameterType="HomeFilter" resultMap="jtown-seller-map">
		SELECT
			us.pn , u.name, us.shop_url, us.notice,
			ssid.view_count, clsp.love_count, ccsp.comment_count, bdl.banner_first, bdl.banner_second,
			pnb.new_product, 
			us.hot AS love_hot_count
			<if test="customerPn != null">	
			, cl.customer_pn
			</if>
		FROM
			user_seller us 
			LEFT OUTER JOIN users u
			ON us.pn = u.pn 
			LEFT OUTER JOIN count_love_seller_pn clsp
			ON us.pn = clsp.seller_pn
			LEFT OUTER JOIN sum_statistic_interval_7day ssid
			ON us.pn = ssid.seller_pn
			LEFT OUTER JOIN count_comment_seller_pn ccsp
			ON us.pn = ccsp.seller_pn
			LEFT OUTER JOIN banner_diff_least bdl
			ON us.pn = bdl.seller_pn
			LEFT OUTER JOIN product_new_bool pnb
			ON us.pn = pnb.seller_pn
			<if test="customerPn != null">
			LEFT OUTER JOIN count_love cl
			ON us.pn = cl.seller_pn AND cl.customer_pn = #{customerPn}
			</if>,
			user_seller_interest usi,
			user_seller_contract_info usci,
			interest_section ise
		WHERE
			u.enable = 1
		AND
			us.pn = usi.seller_pn
		AND
			us.pn = usci.seller_pn
		AND
			DATE_FORMAT(SYSDATE(), '%Y-%m-%d') BETWEEN usci.start_date AND usci.end_date
		AND
			usi.section_pn = ise.pn
		AND
			ise.pn = #{sectionPn}
		ORDER BY
			us.pn
		LIMIT #{pagination.itemSeqBegin}, #{pagination.numItemsPerPage}
	</select>

	
	
	<select id="selectLoveCount" parameterType="Count" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			count_love
		WHERE
			customer_pn = #{customerPn}
		AND
			seller_pn = #{sellerPn}
	</select>
	
	<insert id="insertLoveCount" parameterType="Count">
		INSERT INTO
			count_love
			(customer_pn, seller_pn, input_date)
		VALUES
			(	#{customerPn},	#{sellerPn}, SYSDATE() )
	</insert>
	
	<delete id="deleteLoveCount" parameterType="Count">
		DELETE FROM
			count_love
		WHERE
			customer_pn = #{customerPn}
		AND
			seller_pn = #{sellerPn}
	</delete>

	<resultMap type="Interest" id="jtown-interest-category-map">
		<result column="pn" property="categoryPn"/>
		<result column="name" property="name"/>
	</resultMap>

	<select id="selecInterestCategory" resultMap="jtown-interest-category-map">
		SELECT
			pn, name
		FROM
			interest_category
	</select>
	
	<resultMap type="Interest" id="jtown-interest-map">
		<result column="category_pn" property="categoryPn"/>
		<result column="section_pn" property="sectionPn"/>
		<result column="name" property="name"/>
	</resultMap>

	<select id="selectInterest" parameterType="Integer" resultMap="jtown-interest-map">
		<choose>
			<when test="value != null">
				SELECT
					ise.category_pn,  uci.section_pn,  ise.name
				FROM
					user_customer_interest uci,
					interest_section ise,
					interest_category ic
				WHERE
					uci.section_pn = ise.pn
				AND
					ic.pn = ise.category_pn
				AND
					uci.customer_pn = #{customerPn}
				ORDER BY
					category_pn, section_pn
			</when>
			<otherwise>
				SELECT
					pn AS section_pn, category_pn, `name`
				FROM
					interest_section
				ORDER BY
					category_pn, section_pn	
			</otherwise>
		</choose>
	</select>
	
	<select id="selectInterestSectionCount" parameterType="Interest" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			user_customer_interest
		WHERE
			customer_pn = #{customerPn}
		AND
			section_pn = #{sectionPn}
	</select>
	
	<insert id="insertInterest" parameterType="Interest">
		INSERT	INTO
			user_customer_interest
			(customer_pn, section_pn)
		VALUES
			(#{customerPn}, #{sectionPn})
	</insert>
	
	<delete id="deleteInterest" parameterType="Interest">
		DELETE FROM
			user_customer_interest
		WHERE
			customer_pn = #{customerPn}
		AND
			section_pn = #{sectionPn}
	</delete>
	
	<resultMap type="Interest" id="jtown-interest-section-map">
		<result column="pn" property="sectionPn"/>
		<result column="name" property="name"/>
	</resultMap>
	
	<select id="selectInterestSection" parameterType="Integer" resultMap="jtown-interest-section-map">
		SELECT
			pn, name
		FROM
			interest_section
		WHERE
			category_pn = 1
		ORDER BY
			name
	</select>

	<select id="selectStatisticClick" parameterType="Integer" resultType="Integer">
		SELECT
			day_count
		FROM
			statistic_click
		WHERE
			seller_pn = #{sellerPn}
		AND
			count_date = DATE_FORMAT(SYSDATE(), '%Y-%m-%d')
	</select>
	
	<insert id="insertStatisticClick" parameterType="Integer">
		INSERT INTO
			statistic_click
			(	seller_pn, count_date, day_count)
		VALUES
			(	#{sellerPn}, SYSDATE(), 1)
	</insert>
	
	<update id="updateStatisticClick" parameterType="Count">
		UPDATE
			statistic_click
		SET
			day_count = #{count}
		WHERE
			seller_pn = #{sellerPn}
		AND
			count_date = DATE_FORMAT(SYSDATE(), '%Y-%m-%d')
	</update>
	
	<select id="selectStatisticView" parameterType="Integer" resultType="Integer">
		SELECT
			day_count
		FROM
			statistic_view
		WHERE
			seller_pn = #{sellerPn}
		AND
			count_date = DATE_FORMAT(SYSDATE(), '%Y-%m-%d')
	</select>
	
	<insert id="insertStatisticView" parameterType="Count">
		INSERT INTO
			statistic_view
			(	seller_pn, count_date, day_count)
		VALUES
			(	#{sellerPn}, SYSDATE(), #{count})
	</insert>
	
	<update id="updateStatisticView" parameterType="Count">
		UPDATE
			statistic_view
		SET
			day_count = #{count}
		WHERE
			seller_pn = #{sellerPn}
		AND
			count_date = DATE_FORMAT(SYSDATE(), '%Y-%m-%d')
	</update>
	
	<select id="selectSevenDayStatisticView" parameterType="HashMap" resultType="Integer">
		SELECT
			SUM(day_count) AS `count`
		FROM
			`statistic_view`
		WHERE
			seller_pn = #{sellerPn}
		AND
			count_date BETWEEN #{beforeDate} AND #{nowDate}
	</select>
	
	<select id="selectTotalStatisticView" parameterType="Integer" resultType="Integer">
		SELECT
			SUM(day_count) AS `count`
		FROM
			`statistic_view`
		WHERE
			seller_pn = #{sellerPn}
	</select>

	<resultMap type="Comment" id="jt-newComment-map">
		<result column="comment" property="comment"/>
		<result column="pn" property="commentPn"/>
	</resultMap>

	<select id="selectNewComment" parameterType="Integer" resultMap="jt-newComment-map">
		SELECT
			ucc.pn, ucc.comment
		FROM
			user_customer_comment ucc
		WHERE
			ucc.seller_pn = #{pn}
		ORDER BY
			ucc.input_date DESC LIMIT 1
	</select>

</mapper>