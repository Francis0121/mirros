<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sellerMapper">

	<resultMap type="JtownUser" id="jtown-seller-map">
		<result column="pn" property="pn"/>
		<result column="id" property="username"/>
		<result column="name" property="name"/>
		<result column="shop_url" property="shopUrl"/>
		<result column="shop_pn" property="shopPn"/>
		<result column="notice" property="notice"/>
		<result column="long_notice" property="longNotice"/>
		<result column="love_count" property="loveCount"/>
		<result column="view_count" property="viewCount"/>
		<result column="comment_count" property="commentCount"/>
		<result column="banner_first" property="bannerFirst"/>
		<result column="banner_second" property="bannerSecond"/>
		<result column="love_hot_count" property="loveHotCount"/>
		<result column="customer_pn" property="customerPn"/>
		<result column="event_pn" property="eventPn"/>
		<result column="event_name" property="eventName"/>
		<result column="end_date" property="endDate"/>
		<result column="banner_order" property="bannerOrder"/>
		<result column="new_product" property="newProduct"/>
	</resultMap>

	<select id="selectSellerInformation" parameterType="HashMap" resultMap="jtown-seller-map">
		SELECT
			us.pn, u.id, u.name, us.shop_url, us.shop_pn, us.notice, us.long_notice, 
			ssid.view_count, clsp.love_count, ccsp.comment_count, bdl.banner_first, bdl.banner_second,
			pnb.new_product,usle.event_pn, usle.event_name, DATEDIFF(usle.end_date,NOW()) AS end_date, usle.banner_order,
			us.hot AS love_hot_count
			<if test="customerPn != null">
			, cl.customer_pn
			</if>
		FROM
			user_seller us
			LEFT OUTER JOIN users u
				ON us.pn = u.pn 
			LEFT OUTER JOIN count_love_seller_pn clsp
				ON us.pn = clsp.seller_pn
			LEFT OUTER JOIN sum_statistic_interval_7day ssid
				ON us.pn = ssid.seller_pn
			LEFT OUTER JOIN count_comment_seller_pn ccsp
				ON us.pn = ccsp.seller_pn
			LEFT OUTER JOIN banner_diff_least bdl
				ON us.pn = bdl.seller_pn
			LEFT OUTER JOIN product_new_bool pnb
				ON us.pn = pnb.seller_pn
			LEFT OUTER JOIN (SELECT * FROM user_seller_event WHERE DATEDIFF(end_date,NOW()) >= 0 AND deleted = 'N' ORDER BY RAND()) usle
				ON usle.seller_pn = us.pn 
			<if test="customerPn != null">
			LEFT OUTER JOIN count_love cl
			ON us.pn = cl.seller_pn AND cl.customer_pn = #{customerPn}
			</if>
		WHERE
			us.pn = #{properNumber}
			GROUP BY pn
	</select>
	
	<!-- 해결해야될 쿼리 -->
	<resultMap type="Json" id="interval-7day-map">
		<result column="name" property="value"/>
		<result column="count" property="key"/>
	</resultMap>
	
	<select id="selectInterval7DayCount" parameterType="Integer" resultMap="interval-7day-map">
		SELECT
			'love' AS name,COUNT(seller_pn) AS count
		FROM
			count_love
		WHERE
			seller_pn = #{properNumber}
		AND
			input_date BETWEEN #{beforeDate} AND #{nowDate}
		
		UNION
		
		SELECT
			'view' AS name, SUM(day_count) AS count
		FROM
			`statistic_view`
		WHERE
			seller_pn = #{properNumber}
		AND
			count_date BETWEEN #{beforeDate} AND #{nowDate}
			
		UNION	
		
		SELECT
			'comment' AS name, COUNT(seller_pn) AS count
		FROM
			user_customer_comment
		WHERE
			seller_pn = #{properNumber}
		AND
			input_date BETWEEN #{beforeDate} AND #{nowDate}
	</select>
	
	<!-- Seller Image -->
	
	<resultMap type="File" id="jt-represent-map">
		<result column="category" property="category"/>
		<result column="save_name" property="saveName"/>
		<result column="content_type" property="type"/>
	</resultMap>
	
	<select id="selectSellerImage" parameterType="Integer" resultMap="jt-represent-map">
		SELECT
			usin.category, usin.save_name, usin.content_type
		FROM
			user_seller_image_name usin
		<if test="value != null">
		WHERE
			usin.seller_pn = #{value}		
		</if>	
	</select>
	
	<select id="selectSellerImageOne" parameterType="Integer" resultMap="jt-represent-map">
		SELECT
			usin.category, usin.save_name, usin.content_type
		FROM
			user_seller_image_name usin
		<if test="properNumber != null">
		WHERE
			usin.seller_pn = #{properNumber}		
			<if test="imagePn != null">
			AND
				usin.image_pn = #{imagePn}
			</if>
		</if>	
	</select>
	
	<select id="selectSellerImageCount" parameterType="Integer" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			user_seller_image
		<if test="value != null">
		WHERE
			seller_pn = #{value}
		</if>
	</select>
	
	<insert id="insertSellerImage" parameterType="File">
		INSERT INTO
			user_seller_image
			(	seller_pn, image_pn, image_order	)
		VALUES
			(	#{ownerPn}, #{imagePn}, 1	)
	</insert>
	
	<update id="updateSellerImage" parameterType="File">
		UPDATE 
			user_seller_image
		SET
			image_pn = #{imagePn} 
		WHERE
			seller_pn = #{ownerPn}
		AND
			image_order = 1
	</update>
	
	<delete id="deleteSellerImage" parameterType="Integer">
		DELETE FROM
			user_seller_image
		<if test="properNumber != null">
		WHERE
			seller_pn = #{properNumber}		
		</if>
	</delete>
	
	<!-- Notice -->
	
	<update id="updateSellerNotice" parameterType="JtownUser">
		UPDATE
			user_seller
		SET
			notice = #{notice}
		WHERE
			pn = #{pn}
	</update>
	
	<update id="updateSellerLongNotice" parameterType="JtownUser">
		UPDATE
			user_seller
		SET
			long_notice = #{longNotice}
		WHERE
			pn = #{pn}
	</update>
	
	<!-- Event -->
	
	<resultMap type="Event" id="jtown-event-map">
		<result column="pn" property="pn"/>
		<result column="seller_pn" property="sellerPn"/>
		<result column="banner_type" property="bannerType"/>
		<result column="image_pn" property="imagePn"/>
		<result column="content" property="content"/>
		<result column="banner_order" property="bannerOrder"/>
		<result column="save_name" property="saveName"/>
		<result column="category" property="imageCategory"/>
		<result column="content_type" property="imageType"/>
	</resultMap>
	
	<select id="selectEventList" parameterType="Integer" resultMap="jtown-event-map">
		SELECT
			usb.pn, usb.seller_pn, usb.banner_type, usb.image_pn, usb.content, usb.banner_order,
			i.save_name, i.category, i.content_type
		FROM
			user_seller_banner usb 
			LEFT OUTER JOIN image i
			ON usb.image_pn = i.pn
		WHERE
			usb.seller_pn = #{userPn}
		ORDER BY usb.banner_order
	</select>
	
	<select id="selectEventOne" parameterType="Integer" resultType="Event">
		SELECT
			pn, seller_pn AS sellerPn, banner_type AS bannerType,
			image_pn AS imagePn, content, banner_order AS bannerOrder
		FROM
			user_seller_banner
		WHERE
			pn = #{eventPn}
	</select>
	
	<select id="selectEventCount" parameterType="Integer" resultType="Integer">
		SELECT
			COUNT(pn)
		FROM
			user_seller_banner
		WHERE
			seller_pn = #{userPn}
	</select>
		
	<delete id="deleteEvent" parameterType="Event">
		DELETE FROM
			user_seller_banner
		<if test="pn != null">
		WHERE
			pn = #{pn}
		AND
			seller_pn = #{sellerPn}
		</if>
	</delete>
	
	<insert id="insertSellerEvent" parameterType="Event">
		INSERT INTO
			user_seller_banner
			(	seller_pn, banner_type, image_pn, content, banner_order, input_date)
		VALUES
			(	#{sellerPn}, #{bannerType}, #{imagePn}, #{content}, #{bannerOrder}, SYSDATE() )
		<selectKey resultType="java.lang.Integer" keyProperty="pn">
			SELECT LAST_INSERT_ID()
		</selectKey>	
	</insert>
	
	<update id="updateSellerEvent" parameterType="Event">
		UPDATE
			user_seller_banner
		SET
			banner_type = #{bannerType},
			image_pn = #{imagePn},
			content = #{content},
			input_date = SYSDATE()
		WHERE
			pn = #{pn}
		AND
			seller_pn = #{sellerPn}
	</update>
	
	<!-- Event_d-day -->
	
	<resultMap type="Event" id="jtown-event-dday-map">
		<result column="event_pn" property="eventPn"/>
		<result column="seller_pn" property="sellerPn"/>
		<result column="event_name" property="eventName"/>
		<result column="banner_order" property="bannerOrder"/>
		<result column="end_date" property="endDate"/>
	</resultMap>
	
	<insert id="insertDdayEvent" parameterType="Event">
		INSERT INTO 
			user_seller_event(seller_pn, event_name, end_date, begin_date, banner_order)
		VALUES
			(#{sellerPn}, #{eventName}, #{endDate}, SYSDATE(), #{bannerOrder})
	</insert>
	
	<update id="updateDdayEvent" parameterType="Event">
		UPDATE
			 user_seller_event
		SET
			event_name = #{eventName} , end_date = #{endDate}, begin_date = SYSDATE()
		WHERE
			event_pn = #{eventPn}
	</update>
	
	<select id="selectSellerDDayEvent" resultMap="jtown-event-dday-map">
		SELECT 
			event_pn, seller_pn, event_name, end_date, banner_order
		FROM
			user_seller_event
		WHERE 
			seller_pn = #{sellerPn}
			AND banner_order = #{bannerOrder}
			AND deleted ='N'
	</select>
	
	<update id="deleteSellerDDayEvent">
		UPDATE  
			user_seller_event
		SET 
			deleted = 'Y'
		WHERE 
			seller_pn = #{sellerPn}
			AND banner_order = #{bannerOrder}
	</update>
	
	<delete id="deleteSellerBanner">
		DELETE FROM
			user_seller_banner
		WHERE 
			seller_pn = #{sellerPn}
			AND banner_order = #{bannerOrder}
	</delete>
	
	<!-- Interest -->
	
	<resultMap type="Interest" id="jt-interest-map">
		<result column="pn" property="sectionPn"/>
		<result column="name" property="name"/>
		<result column="seller_pn" property="sellerPn"/>
	</resultMap>
	
	<select id="selectSellerInterest" parameterType="Integer" resultMap="jt-interest-map">
		SELECT
			ise.name, ise.pn
		FROM
			user_seller_interest usi,
			interest_section ise
		WHERE
			usi.seller_pn = #{properNumber}
		AND
			usi.section_pn  = pn 
	</select>

	<select id="selectInterestes" parameterType="Integer" resultMap="jt-interest-map">
		SELECT
			ise.pn, ise.name, usi.seller_pn
		FROM
			interest_section ise
			LEFT OUTER JOIN user_seller_interest usi
			ON ( usi.seller_pn = #{properNumber} AND ise.pn = usi.section_pn )
		WHERE
			ise.category_pn = 1
	</select>

	<!-- Product -->

	<resultMap type="Product" id="jt-product-map">
		<result column="image_pn" property="imagePn"/>
		<result column="save_name" property="saveName" />
		<result column="category" property="imageCategory" />
		<result column="content_type" property="imageType" />
		<result column="pn" property="pn"/>
		<result column="name" property="name"/>
		<result column="url" property="url"/>
		<result column="price" property="price"/>
		<result column="order" property="order"/>
		<result column="input_date" property="inputDate"/>
		<result column="seller_pn" property="sellerPn"/>
		<result column="shop_name" property="shopName"/>
		<result column="notice" property="notice"/>
	</resultMap>

	<select id="selectSellerProduct" parameterType="Integer" resultMap="jt-product-map">
		SELECT
			i.pn AS image_pn, i.save_name, i.category, i.content_type, 
			usp.pn, usp.name, usp.url, usp.price, usp.order, DATE_FORMAT(usp.input_date, '%Y%m%d') AS input_date
		FROM
			user_seller_product usp,
			image i
		WHERE
			usp.seller_pn = #{userPn}
		AND
			usp.image_pn = i.pn
		AND usp.deleted = 'N'
		ORDER BY
			usp.order ASC, usp.input_date ASC	
	</select>
	
	<select id="selectSellerProductCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(pn) FROM user_seller_product WHERE seller_pn = #{userPn} AND deleted = 'N'
	</select>
	
	<select id="selectSellerProductFromProductFilter" parameterType="ProductFilter" resultMap="jt-product-map">
		SELECT
			i.pn AS image_pn, i.save_name, i.category, i.content_type, 
			usp.pn, usp.name, usp.url, usp.price, usp.order, DATE_FORMAT(usp.input_date, '%Y%m%d') AS input_date
		FROM
			user_seller_product usp,
			image i
		WHERE
			usp.seller_pn = #{sellerPn}
		AND
			usp.image_pn = i.pn
		AND 
			usp.deleted = 'N'
		ORDER BY
			usp.order ASC, usp.input_date ASC
		LIMIT #{pagination.itemSeqBegin}, #{pagination.numItemsPerPage}	
	</select>
	
	<select id="selectSellerProductCountFromProductFilter" parameterType="ProductFilter" resultType="Integer">
		SELECT COUNT(pn) FROM user_seller_product WHERE seller_pn = #{sellerPn} AND deleted = 'N'
	</select>
	
	<select id="selectSellerProductOne" parameterType="Integer" resultMap="jt-product-map">
		SELECT
			i.pn AS image_pn, i.save_name, usp.seller_pn, shop_name, i.content_type, notice,
			usp.pn, usp.name, usp.url, usp.price, usp.order, usp.input_date
		FROM
			user_seller_product usp
		JOIN image i 
		   	ON i.pn = usp.image_pn 
		JOIN partnership p 
		    ON p.seller_pn = usp.seller_pn 
		JOIN user_seller us
   			ON us.pn = usp.seller_pn
		WHERE
			usp.image_pn = i.pn
		AND
			usp.pn = #{productPn}
		AND 
			usp.deleted = 'N'
	</select>
	
	<delete id="deleteSellerProduct" parameterType="Product">
		UPDATE
			user_seller_product
		SET
			deleted = 'Y'
		<if test="pn != null">
		WHERE
			pn = #{pn}
		AND
			seller_pn = #{sellerPn}		
		</if>
	</delete>
	
	<insert id="insertSellerProduct" parameterType="Product">
		INSERT INTO
			user_seller_product
			(	seller_pn,	image_pn, `order`, input_date )
		VALUES
			(	
				#{sellerPn}, #{imagePn}, 
				(SELECT a.order FROM  (SELECT MAX(`order`) + 1 AS `order` FROM user_seller_product WHERE seller_pn = 8) a), 
				 SYSDATE() 
			)
		<selectKey resultType="java.lang.Integer" keyProperty="pn">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="updateSellerProduct" parameterType="Product">
		UPDATE
			user_seller_product
		SET
			name = #{name},
			url = #{url},
			price = #{price}
		WHERE
			pn = #{pn}
		AND
			seller_pn = #{sellerPn}
	</update>
	
	<select id="selectProductTodayUploadCount" parameterType="Product" resultType="Integer">
		SELECT 
			today_count
		FROM
			seller_upload_count
		WHERE 
			seller_pn = #{sellerPn}
		AND 
			input_date = DATE_FORMAT(SYSDATE(), '%Y%m%d')
	</select>
	
	<insert id="insertProductTodayUploadCount" parameterType="Product">
		INSERT INTO
			seller_upload_count(seller_pn, today_count, input_date)
		VALUES
			(#{sellerPn}, 1, SYSDATE())
	</insert>
	
	<update id="updateProductTodayCount" parameterType="Product">
		UPDATE
			seller_upload_count
		SET
			today_count = today_count+1
		WHERE
			seller_pn = #{sellerPn}
		AND 
			input_date = DATE_FORMAT(SYSDATE(), '%Y%m%d')
	</update>

	<!-- Statistic -->
	<resultMap type="Statistic" id="jt-statistic-map">
		<result column="seller_pn" property="sellerPn"/>
		<result column="count_date" property="countDate"/>
		<result column="today_count" property="todayCount"/>
	</resultMap>
	
	<!-- 
	<select id="selectProductClickStatistic" resultMap="">
		SELECT 
			seller_pn, count_date,day_count
		FROM 
			user_seller_product usp
		JOIN 
			statistic_product_click spc
		ON 	
			usp.pn = spc.product_pn
		WHERE 
			usp.seller_pn = #{sellerPn}
		AND 
			DATE_FORMAT(count_date, '%Y%m') = DATE_FORMAT(#{date}, '%Y%m')
	</select>
	
	<select id="selectShopClickStatistic" resultMap="">
		SELECT 
			seller_pn, count_date,day_count 
		FROM 
			statistic_click
		WHERE 
			seller_pn = #{sellerPn}
		AND 
			DATE_FORMAT(count_date, '%Y%m') = DATE_FORMAT(#{date}, '%Y%m')
	</select>
	
 -->
	 <select id="selectProductClickStatisticTopNPercentList" resultMap="jt-statistic-map">
	 	SELECT 
			seller_pn, count_date, AVG(day_count) AS today_count
		FROM 
			user_seller_product usp
		JOIN 
			statistic_product_click spc
		ON 
			usp.pn = spc.product_pn
		WHERE 
			DATE_FORMAT(count_date, '%Y%m') = DATE_FORMAT(#{statisticDate}, '%Y%m')
		AND seller_pn IN (
			SELECT seller_pn FROM (
			SELECT 
				seller_pn
			FROM 
				user_seller_product usp
			JOIN 
				statistic_product_click spc
			ON 
				usp.pn = spc.product_pn
			WHERE 
				DATE_FORMAT(count_date, '%Y%m') = DATE_FORMAT(#{statisticDate}, '%Y%m')
			GROUP BY seller_pn	
			ORDER BY day_count DESC
			LIMIT #{percentCount}
			)tb1
		)	
		GROUP BY count_date
	 </select>
	 
	 <select id="selectProductClickStatisticCount" resultType="Integer">
	 	SELECT COUNT(seller_pn) * 0.2 
	 	FROM (
			SELECT 
				seller_pn
			FROM 
				user_seller_product usp
			JOIN 
				statistic_product_click spc
			ON 
				usp.pn = spc.product_pn
			WHERE 
				DATE_FORMAT(count_date, '%Y%m') = DATE_FORMAT(#{statisticDate}, '%Y%m')
			GROUP BY seller_pn	
		)tb
	 </select>
	<!-- LoveCount -->

	<select id="selectLoveCount" parameterType="Integer" resultType="Integer">
		SELECT
			COUNT(*)
		FROM	
			count_love
		WHERE
			seller_pn = #{properNumber}
	</select>
	
	

</mapper>