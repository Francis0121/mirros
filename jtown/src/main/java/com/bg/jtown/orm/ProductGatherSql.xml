<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="productGatherMapper">

	<resultMap type="ProductGather" id="productGatherMapper">
		<result property="imagePn" column="image_pn"/>
		<result property="sellerPn" column="seller_pn"/>
		<result property="productPn" column="product_pn"/>
		<result property="productName" column="product_name"/>
		<result property="url" column="url"/>
		<result property="price" column="price"/>
		<result property="saveName" column="save_name"/>
		<result property="contentType" column="content_type"/>
	</resultMap>
	
	<resultMap type="ProductGather" id="EventMapper">
		<result property="sellerPn" column="seller_pn"/>
		<result property="eventPn" column="event_pn"/>
		<result property="eventName" column="event_name"/>
		<result property="beginDate" column="begin_date"/>
		<result property="endDate" column="end_date"/>
		<result property="bannerOrder" column="banner_order"/>
		<result property="shopName" column="shop_name"/>
	</resultMap>
	
	<select id="selectGatherProductsCount" resultType="Integer">
		SELECT COUNT(DISTINCT product_pn)
		FROM(
			SELECT usp.pn AS product_pn,usci.seller_pn, image_pn, usp.NAME, url, price, start_date, end_date
			FROM user_seller_product usp
			JOIN user_seller_contract_info usci
				ON usp.seller_pn = usci.seller_pn
			JOIN user_seller us
				ON us.pn = usci.seller_pn
			JOIN users u
				ON u.pn = us.pn 
			JOIN partnership p 
				ON p.seller_pn = us.pn
			WHERE usp.NAME IS NOT NULL
			AND CURDATE() BETWEEN usci.start_date 
			    AND usci.end_date 
			    <if test="categoryPn != 0">
			    	AND p.category_pn = #{categoryPn}
			    </if>
			    AND u.enable = 1 
		) tb
	</select>
	
	<select id="selectGatherProducts" resultMap="productGatherMapper">
		SELECT 
		  product_pn, seller_pn, image_pn, product_name, url, price, save_name, content_type, SUM(day_count) AS day_count
		FROM
		  (SELECT 
		    usp.pn AS product_pn,
			usci.seller_pn,
		    image_pn,
		    usp.NAME AS product_name,
		    url,
		    price,
		    save_name,
		    content_type,
		    day_count
		  FROM
		    user_seller_product usp 
		    JOIN user_seller_contract_info usci 
		      ON usp.seller_pn = usci.seller_pn 
		    JOIN user_seller us 
		      ON us.pn = usci.seller_pn 
		    JOIN users u 
		      ON u.pn = us.pn 
		    JOIN partnership p 
		      ON p.seller_pn = us.pn 
		    LEFT OUTER JOIN statistic_product_click spc
			ON spc.product_pn = usp.pn
		    LEFT OUTER JOIN image img 
		      ON img.pn = image_pn 
		  WHERE usp.NAME IS NOT NULL 
		    AND CURDATE() BETWEEN usci.start_date 
		    AND usci.end_date 
		    <if test="categoryPn != 0"> 
		   		 AND p.category_pn = #{categoryPn}
		    </if>
		    AND u.enable = 1 
		) tb 
		GROUP BY product_pn
		ORDER BY day_count DESC
		LIMIT #{percentCount} , 10
	</select>
	
	<select id="selectGatherHotProducts" resultMap="productGatherMapper">
		SELECT 
		  product_pn, seller_pn, image_pn, product_name, url, price, save_name, content_type, hot, SUM(day_count) AS day_count
		FROM
		  (SELECT 
		    usp.pn AS product_pn,
			usci.seller_pn,
		    image_pn,
		    usp.NAME AS product_name,
		    url,
		    price,
		    save_name,
		    content_type,
		    1 AS hot,
		    day_count
		  FROM
		    user_seller_product usp 
		    JOIN user_seller_contract_info usci 
		      ON usp.seller_pn = usci.seller_pn 
		    JOIN user_seller us 
		      ON us.pn = usci.seller_pn 
		    JOIN users u 
		      ON u.pn = us.pn 
		    JOIN partnership p 
		      ON p.seller_pn = us.pn 
		    LEFT OUTER JOIN statistic_product_click spc
			ON spc.product_pn = usp.pn
		    LEFT OUTER JOIN image img 
		      ON img.pn = image_pn 
		  WHERE usp.NAME IS NOT NULL 
		    AND CURDATE() BETWEEN usci.start_date 
		    AND usci.end_date 
		    <if test="categoryPn != 0"> 
		   		 AND p.category_pn = #{categoryPn}
		    </if>
		    AND u.enable = 1 
		) tb 
		GROUP BY product_pn
		ORDER BY day_count DESC
		LIMIT #{percentCount}
	</select>

	<insert id="insertProductStasticView" >
		INSERT INTO 
			statistic_product_click(product_pn, count_date, day_count)
		VALUES
			(#{productPn}, CURDATE(), 1)
	</insert>
	
	<update id="updateProductStasticView">
		UPDATE 
			statistic_product_click
		SET 
			day_count = #{count}
		WHERE 
			product_pn = #{productPn}
		AND 
			count_date = CURDATE()
	</update>
	
	<select id="selectProductStasticViewTodayCount" resultType="Integer"> 
		SELECT 
			day_count
		FROM 
			statistic_product_click
		WHERE 
			product_pn = #{productPn}  	
		AND
			count_date = CURDATE() 
	</select>
	
	<select id="selectEventList" resultMap="EventMapper"> 
		SELECT
			 event_pn, usee.seller_pn, event_name, begin_date, DATEDIFF(usee.end_date,NOW()) AS end_date, banner_order, p.shop_name, p.shop_url AS url
		FROM
			user_seller_event usee
		JOIN partnership p
			ON p.seller_pn = usee.seller_pn
		WHERE DATEDIFF(usee.end_date,NOW()) >= 0
		<if test="categoryPn != 0"> 
			AND p.category_pn = #{categoryPn}
		</if>	
	</select>
	
	<insert id="insertEventStasticView" >
		INSERT INTO 
			statistic_event_click(event_pn, count_date, day_count)
		VALUES
			(#{event}, CURDATE(), 1)
	</insert>
	
	<update id="updateEventStasticView">
		UPDATE 
			statistic_event_click
		SET 
			day_count = #{count}
		WHERE 
			event_pn = #{eventPn}
		AND 
			count_date = CURDATE()
	</update>
	
	<select id="selectEventStasticViewTodayCount" resultType="Integer"> 
		SELECT 
			day_count
		FROM 
			statistic_event_click
		WHERE 
			event_pn = #{eventPn}  	
		AND
			count_date = CURDATE() 
	</select>
	
</mapper>
	
	