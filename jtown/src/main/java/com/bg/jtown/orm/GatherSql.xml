<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gatherMapper">

	<resultMap type="Gather" id="gatherMapper">
		<result property="imagePn" column="image_pn"/>
		<result property="sellerPn" column="seller_pn"/>
		<result property="productPn" column="product_pn"/>
		<result property="productName" column="product_name"/>
		<result property="url" column="url"/>
		<result property="price" column="price"/>
		<result property="saveName" column="save_name"/>
		<result property="originalName" column="original_name"/>
		<result property="contentType" column="content_type"/>
		<result property="heartCount" column="heart_count"/>
		<result property="customerPn" column="customer_pn"/>
	</resultMap>
	
	<resultMap type="Gather" id="EventMapper">
		<result property="sellerPn" column="seller_pn"/>
		<result property="eventPn" column="event_pn"/>
		<result property="eventName" column="event_name"/>
		<result property="beginDate" column="begin_date"/>
		<result property="endDate" column="end_date"/>
		<result property="bannerOrder" column="banner_order"/>
		<result property="shopName" column="shop_name"/>
		<result property="heartCount" column="heart_count"/>
		<result property="customerPn" column="customer_pn"/>
	</resultMap>
	
	<select id="selectGatherProductsCount" resultType="Integer">
		SELECT COUNT(DISTINCT product_pn)
		FROM(
			SELECT usp.pn AS product_pn,usci.seller_pn, image_pn, usp.NAME, url, price, start_date, end_date
			FROM user_seller_product usp
			JOIN user_seller_contract_info usci
				ON usp.seller_pn = usci.seller_pn
			JOIN user_seller us
				ON us.pn = usci.seller_pn
			JOIN users u
				ON u.pn = us.pn 
			JOIN partnership p 
				ON p.seller_pn = us.pn
			<if test="newFlag == 1">
			JOIN new_product_bool npb
				ON npb.product_pn = usp.pn
			</if>
			WHERE usp.NAME IS NOT NULL
			AND CURDATE() BETWEEN usci.start_date AND usci.end_date 
			    AND usp.deleted ='N'
			    <if test="categoryPn != 0">
			    	AND p.category_pn = #{categoryPn}
			    </if>
			    <if test="newFlag == 1">
			    AND npb.new_product > 0
			    </if>  
			    AND u.enable = 1
		) tb
	</select>
	
	<select id="selectGatherProducts" resultMap="gatherMapper">
		SELECT 
		  product_pn, seller_pn, image_pn, product_name, url, price, save_name, original_name, 
		  	content_type, SUM(day_count) AS day_count, heart_count  <if test="customerPn != null">, customer_pn</if>
		FROM
		  (SELECT 
		    usp.pn AS product_pn,
			usci.seller_pn,
		    image_pn,
		    usp.NAME AS product_name,
		    url,
		    price,
		    save_name,
		    original_name,
		    content_type,
		    day_count,
		    heart_count,
		    pcl.customer_pn
		  FROM
		    user_seller_product usp 
		    JOIN user_seller_contract_info usci 
		      ON usp.seller_pn = usci.seller_pn 
		    JOIN user_seller us 
		      ON us.pn = usci.seller_pn 
		    JOIN users u 
		      ON u.pn = us.pn 
		    JOIN partnership p 
		      ON p.seller_pn = us.pn 
		    LEFT OUTER JOIN statistic_product_click spc
			ON spc.product_pn = usp.pn
		    LEFT OUTER JOIN image img 
		      ON img.pn = image_pn
		    LEFT OUTER JOIN count_product_heart cph
			  ON cph.product_pn = usp.pn 
		    LEFT OUTER JOIN product_count_love pcl
			  ON pcl.product_pn = usp.pn 
			  	<if test="customerPn != null">
			  		AND pcl.customer_pn = #{customerPn}
			  	</if>
		     <if test="newFlag == 1">
			JOIN new_product_bool npb
				ON npb.product_pn = usp.pn
			</if> 
		  WHERE usp.NAME IS NOT NULL 
		    AND CURDATE() BETWEEN usci.start_date AND usci.end_date 
		    AND usp.deleted ='N'
		    <if test="categoryPn != 0"> 
		   		 AND p.category_pn = #{categoryPn}
		    </if>
		    <if test="newFlag == 1">
		    AND npb.new_product > 0	
		    </if> 
		    AND u.enable = 1
		) tb 
		GROUP BY product_pn
		ORDER BY day_count DESC
		LIMIT #{percentCount} , 1000000
	</select>
	
	<select id="selectGatherHotProducts" resultMap="gatherMapper">
		SELECT 
		  product_pn, seller_pn, image_pn, product_name, url, price, save_name, original_name, 1 AS hot, 
		  	content_type, SUM(day_count) AS day_count, heart_count  <if test="customerPn != null">, customer_pn</if>
		FROM
		  (SELECT 
		    usp.pn AS product_pn,
			usci.seller_pn,
		    image_pn,
		    usp.NAME AS product_name,
		    url,
		    price,
		    save_name,
		    original_name,
		    content_type,
		    day_count,
		    heart_count,
		    pcl.customer_pn
		  FROM
		    user_seller_product usp 
		    JOIN user_seller_contract_info usci 
		      ON usp.seller_pn = usci.seller_pn 
		    JOIN user_seller us 
		      ON us.pn = usci.seller_pn 
		    JOIN users u 
		      ON u.pn = us.pn 
		    JOIN partnership p 
		      ON p.seller_pn = us.pn 
		    LEFT OUTER JOIN statistic_product_click spc
			ON spc.product_pn = usp.pn
		    LEFT OUTER JOIN image img 
		      ON img.pn = image_pn
		    LEFT OUTER JOIN count_product_heart cph
			  ON cph.product_pn = usp.pn 
		    LEFT OUTER JOIN product_count_love pcl
			  ON pcl.product_pn = usp.pn 
			  	<if test="customerPn != null">
			  		AND pcl.customer_pn = #{customerPn}
			  	</if>
		     <if test="newFlag == 1">
			JOIN new_product_bool npb
				ON npb.product_pn = usp.pn
			</if> 
		  WHERE usp.NAME IS NOT NULL 
		    AND CURDATE() BETWEEN usci.start_date AND usci.end_date 
		    AND usp.deleted ='N'
		    <if test="categoryPn != 0"> 
		   		 AND p.category_pn = #{categoryPn}
		    </if>
		    <if test="newFlag == 1">
		    AND npb.new_product > 0	
		    </if> 
		    AND u.enable = 1
		) tb 
		GROUP BY product_pn
		ORDER BY day_count DESC
		LIMIT #{percentCount} 
	</select>

	<insert id="insertProductStasticView" >
		INSERT INTO 
			statistic_product_click(product_pn, count_date, day_count)
		VALUES
			(#{productPn}, CURDATE(), 1)
	</insert>
	
	<update id="updateProductStasticView">
		UPDATE 
			statistic_product_click
		SET 
			day_count = #{count}
		WHERE 
			product_pn = #{productPn}
		AND 
			count_date = CURDATE()
	</update>
	
	<select id="selectProductStasticViewTodayCount" resultType="Integer"> 
		SELECT 
			day_count
		FROM 
			statistic_product_click
		WHERE 
			product_pn = #{productPn}  	
		AND
			count_date = CURDATE() 
	</select>
	
	<select id="selectEventList" resultMap="EventMapper"> 
		SELECT
			 usee.event_pn, usee.seller_pn, event_name, begin_date, DATEDIFF(usee.end_date,SYSDATE()) AS end_date, banner_order, p.shop_name, p.shop_url AS url, heart_count <if test="customerPn != null">, customer_pn</if>
		FROM
			user_seller_event usee
		JOIN partnership p
			ON p.seller_pn = usee.seller_pn
		JOIN users u
			ON u.pn = p.seller_pn
		LEFT OUTER JOIN count_event_heart ceh
			  ON ceh.event_pn = usee.event_pn 
		LEFT OUTER JOIN event_count_love ecl
			  ON ecl.event_pn = usee.event_pn 
			  <if test="customerPn != null">
			  		AND ecl.customer_pn = #{customerPn}
			  	</if>
		<if test="newFlag == 1">
		JOIN new_event_bool neb
			ON neb.event_pn = usee.event_pn 
		</if>	
		WHERE DATEDIFF(usee.end_date,SYSDATE()) >= 0
			AND u.enable = 1
		<if test="newFlag == 1">
			AND neb.new_event > 0
		</if>	
		<if test="categoryPn != 0"> 
			AND p.category_pn = #{categoryPn}
		</if>	
	</select>
	
	<insert id="insertEventStasticView" >
		INSERT INTO 
			statistic_event_click(event_pn, count_date, day_count)
		VALUES
			(#{event}, CURDATE(), 1)
	</insert>
	
	<update id="updateEventStasticView">
		UPDATE 
			statistic_event_click
		SET 
			day_count = #{count}
		WHERE 
			event_pn = #{eventPn}
		AND 
			count_date = CURDATE()
	</update>
	
	<select id="selectEventStasticViewTodayCount" resultType="Integer"> 
		SELECT 
			day_count
		FROM 
			statistic_event_click
		WHERE 
			event_pn = #{eventPn}  	
		AND
			count_date = CURDATE() 
	</select>
	
	<select id="selectProductHeartCountForCustomer" resultType="Integer" parameterType="Count">
		SELECT
			COUNT(*)
		FROM
			product_count_love
		WHERE
			customer_pn = #{customerPn}
		AND
			product_pn = #{productPn}
	</select>
	
	<insert id="insertProductHeart" parameterType="Count">
		INSERT INTO
			product_count_love(customer_pn, product_pn, input_date)
		VALUES
			(#{customerPn}, #{productPn}, SYSDATE())
	</insert>
	
	<delete id="deleteProductHeart" parameterType="Count">
		DELETE FROM
			product_count_love
		WHERE 
			customer_pn = #{customerPn}
		AND
			product_pn = #{productPn} 
	</delete>
	
	<select id="selectProductHeartCount" resultType="Integer" parameterType="Count">
		SELECT
			COUNT(*)
		FROM
			product_count_love
		WHERE
			product_pn = #{productPn}
	</select>
	
	<select id="selectEventHeartCountForCustomer" resultType="Integer" parameterType="Count">
		SELECT
			COUNT(*)
		FROM
			event_count_love
		WHERE
			customer_pn = #{customerPn}
		AND
			event_pn = #{eventPn}
	</select>
	
	<insert id="insertEventHeart" parameterType="Count">
		INSERT INTO
			event_count_love(customer_pn, event_pn, input_date)
		VALUES
			(#{customerPn}, #{eventPn}, SYSDATE())
	</insert>
	
	<delete id="deleteEventHeart" parameterType="Count">
		DELETE FROM
			event_count_love
		WHERE 
			customer_pn = #{customerPn}
		AND
			event_pn = #{eventPn} 
	</delete>
	
	<select id="selectEventHeartCount" resultType="Integer" parameterType="Count">
		SELECT
			COUNT(*)
		FROM
			event_count_love
		WHERE
			event_pn = #{eventPn}
	</select>
	
	<resultMap type="Gather" id="ShopEventMapper">
		<result property="sellerPn" column="seller_pn"/>
		<result property="eventPn" column="event_pn"/>
		<result property="eventName" column="event_name"/>
		<result property="shopName" column="shop_name"/>
		<result property="url" column="shop_url"/>
	</resultMap>
	
	<select id="selectShopEvent" resultMap="ShopEventMapper">
		SELECT 
			event_pn, usee.seller_pn,shop_name, shop_url, event_name
		FROM 
			user_seller_event usee
		JOIN 
			partnership p
		ON 
			p.seller_pn = usee.seller_pn
		WHERE 
			event_pn = #{eventPn}
		AND 
			deleted = 'N'
	</select>
	
	<!-- comment  -->
	<resultMap type="Comment" id="jtown-comment-map">
		<result column="comment_pn" property="commentPn"/>
		<result column="customer_pn" property="customerPn"/>
		<result column="product_pn" property="productPn"/>
		<result column="comment" property="comment"/>
		<result column="input_date" property="inputDate"/>
		<result column="deleted" property="deleted"/>
	</resultMap>
	
	<select id="selectCommentExist" resultType="Integer">
		SELECT 
			COUNT(comment_pn)
		FROM 
			product_comment
		WHERE 
			product_pn = #{productPn} 
		AND 
			customer_pn = #{customerPn}
		AND 
			deleted ='N'
	</select>
	
	<select id="selectCommentList" resultMap="jtown-comment-map">
		SELECT 
			comment_pn, customer_pn, COMMENT, DATE_FORMAT(input_date, '%Y-%m-%d %H:%i') AS input_date
		FROM 
			product_comment
		WHERE 
			product_pn = #{productPn}
		AND deleted = 'N'
		ORDER BY 
			input_date DESC
			LIMIT #{preItem}, #{postItem}
	</select>
	
	<select id="selectUserCommentExist" resultType="Integer">
		SELECT 
			COUNT(comment_pn)
		FROM 
			product_comment
		WHERE 
			comment_pn = #{commentPn} 
		AND 
			customer_pn = #{customerPn}
		AND 
			deleted ='N'
	</select>
	
	<insert id="insertProductComment" > 
		INSERT INTO 
			product_comment(product_pn, customer_pn, comment, input_date) 
		VALUES(#{productPn}, #{customerPn}, #{comment}, SYSDATE())
	</insert>
	
	<update id="deleteProductComment">
		UPDATE 
			product_comment
		SET 
			deleted = 'Y'
		WHERE 
			comment_pn = #{commentPn}
	</update>
	
	<select id="selectProductCommentWarnExist" resultType="Integer" >
		SELECT 
			COUNT(*) 
		FROM 
			product_comment_warn
		WHERE 
			comment_pn = #{commentPn} 
		AND 
			customer_pn = #{customerPn}
	</select>
	
	<insert id="insertProductCommentWarn">
		INSERT INTO 
			product_comment_warn(comment_pn, customer_pn, input_date)
		VALUES(#{commentPn}, #{customerPn}, SYSDATE())
	</insert>
	
	
	<!-- bannerEvent  -->
	<resultMap type="Event" id="jtown-banner-map">
		<result column="event_pn" property="pn"/>
		<result column="image" property="saveName"/>
		<result column="event_name" property="eventName"/>
		<result column="contents" property="content"/>
		<result column="banner_order" property="bannerOrder"/>
		<result column="banner_type" property="bannerType"/>
		<result column="input_date" property="inputDate"/>
		<result column="datas" property="variableData"/>
		<result column="fb_message" property="fbMessage"/>
		<result column="fb_thumbnail" property="fbThumbnail"/>
	</resultMap>
	
	<select id="selectBannerEvent" resultMap="jtown-banner-map">
		SELECT 
		  event_pn,
		  image,
		  event_name,
		  contents,
		  input_date,
		  banner_type,
		  banner_order,
		  datas,
		  fb_message,
		  fb_thumbnail 
		FROM
		  banner_event 
		WHERE event_pn = #{pn}
		AND deleted = 'N'
	</select>
	
	<!-- bannerEventParticipant  -->
	<resultMap type="Participant" id="jtown-participant-map">
		<result column="customer_pn" property="customerPn"/>
		<result column="event_pn" property="eventPn"/>
		<result column="memo" property="memo"/>
		<result column="input_date" property="inputDate"/>
	</resultMap>
	
	<insert id="insertBannerEventParticipant">
		INSERT INTO 
			banner_event_participant(customer_pn, event_pn, memo, input_date)
		VALUES
			(#{customerPn}, #{eventPn}, #{memo}, SYSDATE())
	</insert>
	
	<select id="selectExistParticipant" resultType="Integer">
		SELECT 
		  COUNT(*) 
		FROM
		  banner_event_participant 
		WHERE customer_pn = #{customerPn} 
		  AND event_pn = #{eventPn}
	</select>
	
</mapper>
	
	